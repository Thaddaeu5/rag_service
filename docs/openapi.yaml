openapi: 3.0.3
info:
  title: RAG service
  description: A high-performance RAG (Retrieval-Augmented Generation) service for document search and retrieval.
  version: 1.0.0
servers:
  - url: http://librechat-rag-service:8000
    description: Docker internal RAG service
paths:
  /health/:
    get:
      tags:
        - health
      summary: Health Check
      description: Basic health check for load balancers.
      operationId: health_check_health__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /health/detailed:
    get:
      tags:
        - health
      summary: Detailed Health Check
      description: Detailed health check including dependencies.
      operationId: detailed_health_check_health_detailed_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
  /api/v1/search/:
    post:
      tags:
        - search
      summary: Search Documents
      description: Search documents using hybrid vector + BM25 approach with reranking.
      operationId: search_documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/search/vector:
    post:
      tags:
        - search
      summary: Vector Search
      description: Pure vector similarity search (no BM25).
      operationId: vector_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/search/bm25:
    post:
      tags:
        - search
      summary: Bm25 Search
      description: Pure BM25 full-text search (no vector similarity).
      operationId: bm25_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/:
    post:
      tags:
        - documents
      summary: Create Document
      description: Ingest a new document with automatic chunking and embedding generation.
      operationId: create_document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - documents
      summary: List Documents
      description: List documents with pagination.
      operationId: list_documents
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/{document_id}:
    get:
      tags:
        - documents
      summary: Get Document
      description: Retrieve a specific document by ID.
      operationId: get_document
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - documents
      summary: Update Document
      description: Update an existing document.
      operationId: update_document
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - documents
      summary: Delete Document
      description: Delete a document.
      operationId: delete_document
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/upload:
    post:
      tags:
        - documents
      summary: Upload Document
      description: Upload a text file as a document with automatic chunking and embedding generation.
      operationId: upload_document
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_document_api_v1_documents_upload_post'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/batch-job:
    post:
      tags:
        - documents
      summary: Create Batch Job
      description: Create a batch processing job for multiple documents using OpenAI Batch API.
      operationId: create_batch_job
      parameters:
        - name: use_batch_api
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/batch-job/{job_id}:
    get:
      tags:
        - documents
      summary: Get Batch Job Status
      description: Get the status of a batch processing job.
      operationId: get_batch_status
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Root
      description: Root endpoint with service information.
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Body_upload_document_api_v1_documents_upload_post:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
        metadata:
          type: string
          nullable: true
    Document:
      type: object
      required:
        - content
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        metadata:
          type: object
          additionalProperties: true
        embedding:
          type: array
          items:
            type: number
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
    DocumentCreateRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1
        metadata:
          type: object
          additionalProperties: true
    DocumentUpdateRequest:
      type: object
      properties:
        content:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - services
      properties:
        status:
          type: string
        timestamp:
          type: string
          format: date-time
        services:
          type: object
          additionalProperties:
            type: string
    SearchRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          minLength: 1
          maxLength: 1000
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        include_metadata:
          type: boolean
          default: true
    SearchResponse:
      type: object
      required:
        - results
        - query
        - total_results
        - processing_time_ms
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        query:
          type: string
        total_results:
          type: integer
        processing_time_ms:
          type: number
    SearchResult:
      type: object
      required:
        - document
        - score
      properties:
        document:
          $ref: '#/components/schemas/Document'
        score:
          type: number
        rank_explanation:
          type: object
          additionalProperties: true
          nullable: true
    ValidationError:
      type: object
      required:
        - loc
        - msg
        - type
      properties:
        loc:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer
        msg:
          type: string
        type:
          type: string